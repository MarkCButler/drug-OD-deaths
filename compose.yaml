services:

  # Container used for front-end development.  See the stage front-end-dev-env
  # of the Dockerfile for comments about usage.
  front-end-dev:
    build:
      context: .
      target: front-end-dev-env
    stdin_open: true
    tty: true
    init: true
    volumes:
      - type: bind
        source: ./front-end
        target: /app/front-end
      - type: bind
        source: ./static
        target: /app/static

  # Container used for back-end development.  See the stage back-end-dev-env of
  # the Dockerfile for comments about usage.
  back-end-dev:
    build:
      context: .
      target: back-end-dev-env
    stdin_open: true
    tty: true
    init: true
    ports:
      - target: 5000
        host_ip: 127.0.0.1
        published: 5000
    volumes:
      - type: bind
        source: ./od_deaths
        target: /app/od_deaths
      - type: bind
        source: ./data
        target: /app/data
      - type: bind
        source: ./static
        target: /app/static

  # Container for running the production build of the app.
  app:
    build:
      context: .
      target: production-build
    container_name: od-deaths-app
    init: true
    ports:
      - target: 8000
        host_ip: 127.0.0.1
        published: 8000
    environment:
      - OD_DEATHS_APP_SETTINGS=/app/app_settings.py
      # Gunicorn settings that depend on the details of the docker image are
      # defined below using the environment variable GUNICORN_CMD_ARGS rather
      # than in the configuration file gunicorn.conf.py in the repo root.
      - GUNICORN_CMD_ARGS=--bind=0.0.0.0:8000 --worker-tmp-dir=/dev/shm
    configs:
      - source: app_settings
        target: /app/app_settings.py
      - source: gunicorn_settings
        target: /app/gunicorn.conf.py

configs:
  app_settings:
    file: ./app_settings.py
  gunicorn_settings:
    file: ./gunicorn.conf.py
